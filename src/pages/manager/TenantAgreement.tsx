import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { CalendarDays, FileSignature, ArrowLeft, Download } from "lucide-react";
import rentoLogo from "@/assets/rento-logo-dark.svg";
import { useNavigate } from "react-router-dom";
import { jsPDF } from "jspdf";

const TenantAgreement = () => {
  const navigate = useNavigate();

  const [formData, setFormData] = useState({
    managerName: "",
    propertyDetails: "",
    dateOfSignature: "",
    leaseDuration: "",
    monthlyRent: "",
    totalAmount: "",
    leaseType: "",
    details: "",
    tenantSignature: "",
    landlordSignature: "",
  });

  const [signedAgreements] = useState([
    {
      id: 1,
      property: "Hillview Apartment",
      landlord: "Urban Estates Ltd.",
      dateSigned: "2024-07-15",
      amount: "2,400,000",
      duration: "3 months",
    },
    {
      id: 2,
      property: "Garden Cottage",
      landlord: "Prime Realty Co.",
      dateSigned: "2024-04-10",
      amount: "3,200,000",
      duration: "4 months",
    },
  ]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const generatePDF = async () => {
    const doc = new jsPDF({ unit: "pt", format: "a4" });
    const pageWidth = doc.internal.pageSize.getWidth();

    // Rento color
    const primary = "#08967e";

    // Add logo and header
    const logo = await fetch(rentoLogo)
      .then((res) => res.blob())
      .then((blob) => URL.createObjectURL(blob));

    doc.addImage(logo, "PNG", 40, 30, 50, 50);
    doc.setFont("helvetica", "bold");
    doc.setFontSize(18);
    doc.setTextColor(primary);
    doc.text("Rento Tenant Rental Agreement", 110, 60);

    // Divider line
    doc.setDrawColor(primary);
    doc.setLineWidth(1);
    doc.line(40, 75, pageWidth - 40, 75);

    doc.setTextColor("#000000");
    doc.setFontSize(12);
    let y = 110;

    // Section: Parties
    doc.setFont("helvetica", "bold");
    doc.setTextColor(primary);
    doc.text("Parties", 40, y);
    y += 20;

    doc.setFont("helvetica", "normal");
    doc.setTextColor("#000000");
    doc.text(`Property Manager: ${formData.managerName || "[Name]"}`, 60, y);
    y += 20;
    doc.text(`Property: ${formData.propertyDetails || "[Property Details]"}`, 60, y);
    y += 20;
    doc.text(`Date of Signature: ${formData.dateOfSignature || "[Date]"}`, 60, y);
    y += 30;

    // Section: Lease Details
    doc.setFont("helvetica", "bold");
    doc.setTextColor(primary);
    doc.text("Lease Details", 40, y);
    y += 20;

    doc.setFont("helvetica", "normal");
    doc.setTextColor("#000000");
    doc.text(`Lease Duration: ${formData.leaseDuration || "[Duration]"}`, 60, y);
    y += 20;
    doc.text(`Lease Type: ${formData.leaseType || "[Type]"}`, 60, y);
    y += 20;
    doc.text(`Monthly Rent: UGX ${formData.monthlyRent || "[Amount]"}`, 60, y);
    y += 20;
    doc.text(`Total Amount: UGX ${formData.totalAmount || "[Total]"}`, 60, y);
    y += 30;

    // Section: Terms
    doc.setFont("helvetica", "bold");
    doc.setTextColor(primary);
    doc.text("Terms and Conditions", 40, y);
    y += 20;

    doc.setFont("helvetica", "normal");
    const terms = formData.details || "No additional details provided.";
    const splitTerms = doc.splitTextToSize(terms, pageWidth - 80);
    doc.text(splitTerms, 60, y);
    y += splitTerms.length * 14 + 30;

    // Section: Signatures
    doc.setFont("helvetica", "bold");
    doc.setTextColor(primary);
    doc.text("Signatures", 40, y);
    y += 40;

    doc.setFont("helvetica", "normal");
    doc.setTextColor("#000000");

    doc.line(60, y, 250, y); // Tenant signature line
    doc.text("Tenant Signature", 60, y + 15);
    doc.text(formData.tenantSignature || "", 60, y - 5);

    doc.line(pageWidth - 250, y, pageWidth - 60, y); // Landlord signature line
    doc.text("Landlord Signature", pageWidth - 250, y + 15);
    doc.text(formData.landlordSignature || "", pageWidth - 250, y - 5);
    y += 60;

    // Footer
    doc.setFontSize(10);
    doc.setTextColor("#777");
    doc.text(
      "Generated by Rento • Revolutionizing the Rental Experience",
      pageWidth / 2,
      820,
      { align: "center" }
    );
    doc.text(`Page 1 of 1`, pageWidth - 80, 820);

    doc.save("Rento_Tenant_Agreement.pdf");
  };

  return (
    <div className="min-h-screen bg-background relative pb-20">
      {/* Header */}
      <header className="border-b bg-card">
        <div className="container mx-auto flex items-center justify-between px-4 py-4">
          <div className="flex items-center gap-2">
            <img src={rentoLogo} alt="Rento" className="h-8 w-auto" />
            <h1 className="font-heading text-xl font-semibold text-foreground">
              Tenant Agreement
            </h1>
          </div>
        </div>
      </header>

      {/* Form */}
      <main className="container mx-auto px-4 py-10 max-w-3xl space-y-10">
        <Card className="p-6 border-border space-y-6">
          <h2 className="font-heading text-lg font-semibold text-foreground flex items-center gap-2">
            <FileSignature className="h-5 w-5 text-primary" />
            New Tenant Agreement
          </h2>

          <div className="space-y-4">
            <Input
              name="managerName"
              placeholder="Property Manager’s Name"
              onChange={handleChange}
              value={formData.managerName}
            />
            <Input
              name="propertyDetails"
              placeholder="Property Details"
              onChange={handleChange}
              value={formData.propertyDetails}
            />

            <div className="grid grid-cols-2 gap-4">
              <Input
                type="date"
                name="dateOfSignature"
                onChange={handleChange}
                value={formData.dateOfSignature}
              />
              <Input
                name="leaseDuration"
                placeholder="Lease Duration (Months)"
                onChange={handleChange}
                value={formData.leaseDuration}
              />
            </div>

            <div className="grid grid-cols-2 gap-4">
              <Input
                name="monthlyRent"
                placeholder="Monthly Rent (UGX)"
                onChange={handleChange}
                value={formData.monthlyRent}
              />
              <Input
                name="totalAmount"
                placeholder="Total Amount (UGX)"
                onChange={handleChange}
                value={formData.totalAmount}
              />
            </div>

            <Input
              name="leaseType"
              placeholder="Lease Type (e.g., Monthly, Yearly)"
              onChange={handleChange}
              value={formData.leaseType}
            />

            <Textarea
              name="details"
              placeholder="Agreement Details (Responsibilities, Termination Policy, etc.)"
              rows={6}
              onChange={handleChange}
              value={formData.details}
            />

            <div className="grid grid-cols-2 gap-4">
              <Input
                name="tenantSignature"
                placeholder="Tenant Signature"
                onChange={handleChange}
                value={formData.tenantSignature}
              />
              <Input
                name="landlordSignature"
                placeholder="Landlord Signature"
                onChange={handleChange}
                value={formData.landlordSignature}
              />
            </div>
          </div>

          <Button
            onClick={generatePDF}
            className="w-full h-12 bg-primary text-primary-foreground hover:bg-primary/90 mt-4"
          >
            <Download className="h-5 w-5 mr-2" /> Save Agreement (PDF)
          </Button>
        </Card>

        {/* Previously Signed Agreements */}
        <section>
          <h2 className="font-heading text-lg font-semibold text-foreground mb-4 flex items-center gap-2">
            <CalendarDays className="h-5 w-5 text-primary" />
            Previously Signed Agreements
          </h2>

          <div className="space-y-4">
            {signedAgreements.map((a) => (
              <Card
                key={a.id}
                className="p-6 border-border hover:border-primary/60 transition-all"
              >
                <div className="flex justify-between items-center">
                  <div>
                    <h3 className="font-heading text-lg text-foreground">
                      {a.property}
                    </h3>
                    <p className="text-sm text-muted-foreground">
                      Managed by {a.landlord}
                    </p>
                    <p className="text-sm text-muted-foreground mt-1">
                      Signed on: {a.dateSigned}
                    </p>
                    <p className="text-sm text-muted-foreground">
                      Duration: {a.duration}
                    </p>
                  </div>
                  <p className="font-semibold text-primary text-right">
                    UGX {a.amount}
                  </p>
                </div>
              </Card>
            ))}
          </div>
        </section>
      </main>

      {/* Back Button */}
      <Button
        variant="ghost"
        size="icon"
        onClick={() => navigate(-1)}
        className="fixed bottom-6 left-6 rounded-full bg-card border border-border shadow-sm hover:bg-muted"
      >
        <ArrowLeft className="h-5 w-5 text-primary" />
      </Button>
    </div>
  );
};

export default TenantAgreement;
